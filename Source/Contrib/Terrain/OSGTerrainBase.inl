/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class Terrain!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include "OSGConfig.h"

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &TerrainBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 TerrainBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
TerrainPtr TerrainBase::create(void) 
{
    TerrainPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = TerrainPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
TerrainPtr TerrainBase::createEmpty(void) 
{ 
    TerrainPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the Terrain::_sfHeightData field.
inline
const SFImagePtr *TerrainBase::getSFHeightData(void) const
{
    return &_sfHeightData;
}

//! Get the Terrain::_sfHeightData field.
inline
SFImagePtr *TerrainBase::editSFHeightData(void)
{
    return &_sfHeightData;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfHeightData field.
inline
SFImagePtr *TerrainBase::getSFHeightData(void)
{
    return &_sfHeightData;
}
#endif

//! Get the Terrain::_sfHeightScale field.
inline
const SFReal32 *TerrainBase::getSFHeightScale(void) const
{
    return &_sfHeightScale;
}

//! Get the Terrain::_sfHeightScale field.
inline
SFReal32 *TerrainBase::editSFHeightScale(void)
{
    return &_sfHeightScale;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfHeightScale field.
inline
SFReal32 *TerrainBase::getSFHeightScale(void)
{
    return &_sfHeightScale;
}
#endif

//! Get the Terrain::_mfHeightError field.
inline
const MFReal32 *TerrainBase::getMFHeightError(void) const
{
    return &_mfHeightError;
}

//! Get the Terrain::_mfHeightError field.
inline
MFReal32 *TerrainBase::editMFHeightError(void)
{
    return &_mfHeightError;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_mfHeightError field.
inline
MFReal32 *TerrainBase::getMFHeightError(void)
{
    return &_mfHeightError;
}
#endif

//! Get the Terrain::_mfHeightQuad field.
inline
const MFReal32 *TerrainBase::getMFHeightQuad(void) const
{
    return &_mfHeightQuad;
}

//! Get the Terrain::_mfHeightQuad field.
inline
MFReal32 *TerrainBase::editMFHeightQuad(void)
{
    return &_mfHeightQuad;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_mfHeightQuad field.
inline
MFReal32 *TerrainBase::getMFHeightQuad(void)
{
    return &_mfHeightQuad;
}
#endif

//! Get the Terrain::_sfWidth field.
inline
const SFUInt32 *TerrainBase::getSFWidth(void) const
{
    return &_sfWidth;
}

//! Get the Terrain::_sfWidth field.
inline
SFUInt32 *TerrainBase::editSFWidth(void)
{
    return &_sfWidth;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfWidth field.
inline
SFUInt32 *TerrainBase::getSFWidth(void)
{
    return &_sfWidth;
}
#endif

//! Get the Terrain::_sfLevel field.
inline
const SFUInt32 *TerrainBase::getSFLevel(void) const
{
    return &_sfLevel;
}

//! Get the Terrain::_sfLevel field.
inline
SFUInt32 *TerrainBase::editSFLevel(void)
{
    return &_sfLevel;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfLevel field.
inline
SFUInt32 *TerrainBase::getSFLevel(void)
{
    return &_sfLevel;
}
#endif

//! Get the Terrain::_sfDetail field.
inline
const SFReal32 *TerrainBase::getSFDetail(void) const
{
    return &_sfDetail;
}

//! Get the Terrain::_sfDetail field.
inline
SFReal32 *TerrainBase::editSFDetail(void)
{
    return &_sfDetail;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfDetail field.
inline
SFReal32 *TerrainBase::getSFDetail(void)
{
    return &_sfDetail;
}
#endif

//! Get the Terrain::_sfBorderDetail field.
inline
const SFInt32 *TerrainBase::getSFBorderDetail(void) const
{
    return &_sfBorderDetail;
}

//! Get the Terrain::_sfBorderDetail field.
inline
SFInt32 *TerrainBase::editSFBorderDetail(void)
{
    return &_sfBorderDetail;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfBorderDetail field.
inline
SFInt32 *TerrainBase::getSFBorderDetail(void)
{
    return &_sfBorderDetail;
}
#endif

//! Get the Terrain::_sfVertexSpacing field.
inline
const SFReal32 *TerrainBase::getSFVertexSpacing(void) const
{
    return &_sfVertexSpacing;
}

//! Get the Terrain::_sfVertexSpacing field.
inline
SFReal32 *TerrainBase::editSFVertexSpacing(void)
{
    return &_sfVertexSpacing;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfVertexSpacing field.
inline
SFReal32 *TerrainBase::getSFVertexSpacing(void)
{
    return &_sfVertexSpacing;
}
#endif

//! Get the Terrain::_sfHeightVertices field.
inline
const SFGeoPositionsPtr *TerrainBase::getSFHeightVertices(void) const
{
    return &_sfHeightVertices;
}

//! Get the Terrain::_sfHeightVertices field.
inline
SFGeoPositionsPtr *TerrainBase::editSFHeightVertices(void)
{
    return &_sfHeightVertices;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfHeightVertices field.
inline
SFGeoPositionsPtr *TerrainBase::getSFHeightVertices(void)
{
    return &_sfHeightVertices;
}
#endif

//! Get the Terrain::_sfGeoMorphing field.
inline
const SFBool *TerrainBase::getSFGeoMorphing(void) const
{
    return &_sfGeoMorphing;
}

//! Get the Terrain::_sfGeoMorphing field.
inline
SFBool *TerrainBase::editSFGeoMorphing(void)
{
    return &_sfGeoMorphing;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfGeoMorphing field.
inline
SFBool *TerrainBase::getSFGeoMorphing(void)
{
    return &_sfGeoMorphing;
}
#endif

//! Get the Terrain::_sfBoundMin field.
inline
const SFPnt3f *TerrainBase::getSFBoundMin(void) const
{
    return &_sfBoundMin;
}

//! Get the Terrain::_sfBoundMin field.
inline
SFPnt3f *TerrainBase::editSFBoundMin(void)
{
    return &_sfBoundMin;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfBoundMin field.
inline
SFPnt3f *TerrainBase::getSFBoundMin(void)
{
    return &_sfBoundMin;
}
#endif

//! Get the Terrain::_sfBoundMax field.
inline
const SFPnt3f *TerrainBase::getSFBoundMax(void) const
{
    return &_sfBoundMax;
}

//! Get the Terrain::_sfBoundMax field.
inline
SFPnt3f *TerrainBase::editSFBoundMax(void)
{
    return &_sfBoundMax;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfBoundMax field.
inline
SFPnt3f *TerrainBase::getSFBoundMax(void)
{
    return &_sfBoundMax;
}
#endif

//! Get the Terrain::_sfEyePoint field.
inline
const SFPnt3f *TerrainBase::getSFEyePoint(void) const
{
    return &_sfEyePoint;
}

//! Get the Terrain::_sfEyePoint field.
inline
SFPnt3f *TerrainBase::editSFEyePoint(void)
{
    return &_sfEyePoint;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfEyePoint field.
inline
SFPnt3f *TerrainBase::getSFEyePoint(void)
{
    return &_sfEyePoint;
}
#endif

//! Get the Terrain::_sfEyeHeight field.
inline
const SFReal32 *TerrainBase::getSFEyeHeight(void) const
{
    return &_sfEyeHeight;
}

//! Get the Terrain::_sfEyeHeight field.
inline
SFReal32 *TerrainBase::editSFEyeHeight(void)
{
    return &_sfEyeHeight;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfEyeHeight field.
inline
SFReal32 *TerrainBase::getSFEyeHeight(void)
{
    return &_sfEyeHeight;
}
#endif

//! Get the Terrain::_sfEyePointValid field.
inline
const SFBool *TerrainBase::getSFEyePointValid(void) const
{
    return &_sfEyePointValid;
}

//! Get the Terrain::_sfEyePointValid field.
inline
SFBool *TerrainBase::editSFEyePointValid(void)
{
    return &_sfEyePointValid;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfEyePointValid field.
inline
SFBool *TerrainBase::getSFEyePointValid(void)
{
    return &_sfEyePointValid;
}
#endif

//! Get the Terrain::_sfOriginX field.
inline
const SFReal32 *TerrainBase::getSFOriginX(void) const
{
    return &_sfOriginX;
}

//! Get the Terrain::_sfOriginX field.
inline
SFReal32 *TerrainBase::editSFOriginX(void)
{
    return &_sfOriginX;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfOriginX field.
inline
SFReal32 *TerrainBase::getSFOriginX(void)
{
    return &_sfOriginX;
}
#endif

//! Get the Terrain::_sfOriginY field.
inline
const SFReal32 *TerrainBase::getSFOriginY(void) const
{
    return &_sfOriginY;
}

//! Get the Terrain::_sfOriginY field.
inline
SFReal32 *TerrainBase::editSFOriginY(void)
{
    return &_sfOriginY;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfOriginY field.
inline
SFReal32 *TerrainBase::getSFOriginY(void)
{
    return &_sfOriginY;
}
#endif

//! Get the Terrain::_sfOriginTexX field.
inline
const SFReal32 *TerrainBase::getSFOriginTexX(void) const
{
    return &_sfOriginTexX;
}

//! Get the Terrain::_sfOriginTexX field.
inline
SFReal32 *TerrainBase::editSFOriginTexX(void)
{
    return &_sfOriginTexX;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfOriginTexX field.
inline
SFReal32 *TerrainBase::getSFOriginTexX(void)
{
    return &_sfOriginTexX;
}
#endif

//! Get the Terrain::_sfOriginTexY field.
inline
const SFReal32 *TerrainBase::getSFOriginTexY(void) const
{
    return &_sfOriginTexY;
}

//! Get the Terrain::_sfOriginTexY field.
inline
SFReal32 *TerrainBase::editSFOriginTexY(void)
{
    return &_sfOriginTexY;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfOriginTexY field.
inline
SFReal32 *TerrainBase::getSFOriginTexY(void)
{
    return &_sfOriginTexY;
}
#endif

//! Get the Terrain::_sfTexSpacing field.
inline
const SFReal32 *TerrainBase::getSFTexSpacing(void) const
{
    return &_sfTexSpacing;
}

//! Get the Terrain::_sfTexSpacing field.
inline
SFReal32 *TerrainBase::editSFTexSpacing(void)
{
    return &_sfTexSpacing;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfTexSpacing field.
inline
SFReal32 *TerrainBase::getSFTexSpacing(void)
{
    return &_sfTexSpacing;
}
#endif

//! Get the Terrain::_sfTexYSpacing field.
inline
const SFReal32 *TerrainBase::getSFTexYSpacing(void) const
{
    return &_sfTexYSpacing;
}

//! Get the Terrain::_sfTexYSpacing field.
inline
SFReal32 *TerrainBase::editSFTexYSpacing(void)
{
    return &_sfTexYSpacing;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfTexYSpacing field.
inline
SFReal32 *TerrainBase::getSFTexYSpacing(void)
{
    return &_sfTexYSpacing;
}
#endif

//! Get the Terrain::_sfUpdateTerrain field.
inline
const SFBool *TerrainBase::getSFUpdateTerrain(void) const
{
    return &_sfUpdateTerrain;
}

//! Get the Terrain::_sfUpdateTerrain field.
inline
SFBool *TerrainBase::editSFUpdateTerrain(void)
{
    return &_sfUpdateTerrain;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfUpdateTerrain field.
inline
SFBool *TerrainBase::getSFUpdateTerrain(void)
{
    return &_sfUpdateTerrain;
}
#endif

//! Get the Terrain::_sfPerPixelLighting field.
inline
const SFBool *TerrainBase::getSFPerPixelLighting(void) const
{
    return &_sfPerPixelLighting;
}

//! Get the Terrain::_sfPerPixelLighting field.
inline
SFBool *TerrainBase::editSFPerPixelLighting(void)
{
    return &_sfPerPixelLighting;
}

#ifndef OSG_2_PREP
//! Get the Terrain::_sfPerPixelLighting field.
inline
SFBool *TerrainBase::getSFPerPixelLighting(void)
{
    return &_sfPerPixelLighting;
}
#endif


//! Get the value of the Terrain::_sfHeightData field.
inline
ImagePtr &TerrainBase::editHeightData(void)
{
    return _sfHeightData.getValue();
}

//! Get the value of the Terrain::_sfHeightData field.
inline
const ImagePtr &TerrainBase::getHeightData(void) const
{
    return _sfHeightData.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfHeightData field.
inline
ImagePtr &TerrainBase::getHeightData(void)
{
    return _sfHeightData.getValue();
}
#endif

//! Set the value of the Terrain::_sfHeightData field.
inline
void TerrainBase::setHeightData(const ImagePtr &value)
{
    _sfHeightData.setValue(value);
}

//! Get the value of the Terrain::_sfHeightScale field.
inline
Real32 &TerrainBase::editHeightScale(void)
{
    return _sfHeightScale.getValue();
}

//! Get the value of the Terrain::_sfHeightScale field.
inline
const Real32 &TerrainBase::getHeightScale(void) const
{
    return _sfHeightScale.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfHeightScale field.
inline
Real32 &TerrainBase::getHeightScale(void)
{
    return _sfHeightScale.getValue();
}
#endif

//! Set the value of the Terrain::_sfHeightScale field.
inline
void TerrainBase::setHeightScale(const Real32 &value)
{
    _sfHeightScale.setValue(value);
}

//! Get the value of the Terrain::_sfWidth field.
inline
UInt32 &TerrainBase::editWidth(void)
{
    return _sfWidth.getValue();
}

//! Get the value of the Terrain::_sfWidth field.
inline
const UInt32 &TerrainBase::getWidth(void) const
{
    return _sfWidth.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfWidth field.
inline
UInt32 &TerrainBase::getWidth(void)
{
    return _sfWidth.getValue();
}
#endif

//! Set the value of the Terrain::_sfWidth field.
inline
void TerrainBase::setWidth(const UInt32 &value)
{
    _sfWidth.setValue(value);
}

//! Get the value of the Terrain::_sfLevel field.
inline
UInt32 &TerrainBase::editLevel(void)
{
    return _sfLevel.getValue();
}

//! Get the value of the Terrain::_sfLevel field.
inline
const UInt32 &TerrainBase::getLevel(void) const
{
    return _sfLevel.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfLevel field.
inline
UInt32 &TerrainBase::getLevel(void)
{
    return _sfLevel.getValue();
}
#endif

//! Set the value of the Terrain::_sfLevel field.
inline
void TerrainBase::setLevel(const UInt32 &value)
{
    _sfLevel.setValue(value);
}

//! Get the value of the Terrain::_sfDetail field.
inline
Real32 &TerrainBase::editDetail(void)
{
    return _sfDetail.getValue();
}

//! Get the value of the Terrain::_sfDetail field.
inline
const Real32 &TerrainBase::getDetail(void) const
{
    return _sfDetail.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfDetail field.
inline
Real32 &TerrainBase::getDetail(void)
{
    return _sfDetail.getValue();
}
#endif

//! Set the value of the Terrain::_sfDetail field.
inline
void TerrainBase::setDetail(const Real32 &value)
{
    _sfDetail.setValue(value);
}

//! Get the value of the Terrain::_sfBorderDetail field.
inline
Int32 &TerrainBase::editBorderDetail(void)
{
    return _sfBorderDetail.getValue();
}

//! Get the value of the Terrain::_sfBorderDetail field.
inline
const Int32 &TerrainBase::getBorderDetail(void) const
{
    return _sfBorderDetail.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfBorderDetail field.
inline
Int32 &TerrainBase::getBorderDetail(void)
{
    return _sfBorderDetail.getValue();
}
#endif

//! Set the value of the Terrain::_sfBorderDetail field.
inline
void TerrainBase::setBorderDetail(const Int32 &value)
{
    _sfBorderDetail.setValue(value);
}

//! Get the value of the Terrain::_sfVertexSpacing field.
inline
Real32 &TerrainBase::editVertexSpacing(void)
{
    return _sfVertexSpacing.getValue();
}

//! Get the value of the Terrain::_sfVertexSpacing field.
inline
const Real32 &TerrainBase::getVertexSpacing(void) const
{
    return _sfVertexSpacing.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfVertexSpacing field.
inline
Real32 &TerrainBase::getVertexSpacing(void)
{
    return _sfVertexSpacing.getValue();
}
#endif

//! Set the value of the Terrain::_sfVertexSpacing field.
inline
void TerrainBase::setVertexSpacing(const Real32 &value)
{
    _sfVertexSpacing.setValue(value);
}

//! Get the value of the Terrain::_sfHeightVertices field.
inline
GeoPositionsPtr &TerrainBase::editHeightVertices(void)
{
    return _sfHeightVertices.getValue();
}

//! Get the value of the Terrain::_sfHeightVertices field.
inline
const GeoPositionsPtr &TerrainBase::getHeightVertices(void) const
{
    return _sfHeightVertices.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfHeightVertices field.
inline
GeoPositionsPtr &TerrainBase::getHeightVertices(void)
{
    return _sfHeightVertices.getValue();
}
#endif

//! Set the value of the Terrain::_sfHeightVertices field.
inline
void TerrainBase::setHeightVertices(const GeoPositionsPtr &value)
{
    _sfHeightVertices.setValue(value);
}

//! Get the value of the Terrain::_sfGeoMorphing field.
inline
bool &TerrainBase::editGeoMorphing(void)
{
    return _sfGeoMorphing.getValue();
}

//! Get the value of the Terrain::_sfGeoMorphing field.
inline
const bool &TerrainBase::getGeoMorphing(void) const
{
    return _sfGeoMorphing.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfGeoMorphing field.
inline
bool &TerrainBase::getGeoMorphing(void)
{
    return _sfGeoMorphing.getValue();
}
#endif

//! Set the value of the Terrain::_sfGeoMorphing field.
inline
void TerrainBase::setGeoMorphing(const bool &value)
{
    _sfGeoMorphing.setValue(value);
}

//! Get the value of the Terrain::_sfBoundMin field.
inline
Pnt3f &TerrainBase::editBoundMin(void)
{
    return _sfBoundMin.getValue();
}

//! Get the value of the Terrain::_sfBoundMin field.
inline
const Pnt3f &TerrainBase::getBoundMin(void) const
{
    return _sfBoundMin.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfBoundMin field.
inline
Pnt3f &TerrainBase::getBoundMin(void)
{
    return _sfBoundMin.getValue();
}
#endif

//! Set the value of the Terrain::_sfBoundMin field.
inline
void TerrainBase::setBoundMin(const Pnt3f &value)
{
    _sfBoundMin.setValue(value);
}

//! Get the value of the Terrain::_sfBoundMax field.
inline
Pnt3f &TerrainBase::editBoundMax(void)
{
    return _sfBoundMax.getValue();
}

//! Get the value of the Terrain::_sfBoundMax field.
inline
const Pnt3f &TerrainBase::getBoundMax(void) const
{
    return _sfBoundMax.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfBoundMax field.
inline
Pnt3f &TerrainBase::getBoundMax(void)
{
    return _sfBoundMax.getValue();
}
#endif

//! Set the value of the Terrain::_sfBoundMax field.
inline
void TerrainBase::setBoundMax(const Pnt3f &value)
{
    _sfBoundMax.setValue(value);
}

//! Get the value of the Terrain::_sfEyePoint field.
inline
Pnt3f &TerrainBase::editEyePoint(void)
{
    return _sfEyePoint.getValue();
}

//! Get the value of the Terrain::_sfEyePoint field.
inline
const Pnt3f &TerrainBase::getEyePoint(void) const
{
    return _sfEyePoint.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfEyePoint field.
inline
Pnt3f &TerrainBase::getEyePoint(void)
{
    return _sfEyePoint.getValue();
}
#endif

//! Set the value of the Terrain::_sfEyePoint field.
inline
void TerrainBase::setEyePoint(const Pnt3f &value)
{
    _sfEyePoint.setValue(value);
}

//! Get the value of the Terrain::_sfEyeHeight field.
inline
Real32 &TerrainBase::editEyeHeight(void)
{
    return _sfEyeHeight.getValue();
}

//! Get the value of the Terrain::_sfEyeHeight field.
inline
const Real32 &TerrainBase::getEyeHeight(void) const
{
    return _sfEyeHeight.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfEyeHeight field.
inline
Real32 &TerrainBase::getEyeHeight(void)
{
    return _sfEyeHeight.getValue();
}
#endif

//! Set the value of the Terrain::_sfEyeHeight field.
inline
void TerrainBase::setEyeHeight(const Real32 &value)
{
    _sfEyeHeight.setValue(value);
}

//! Get the value of the Terrain::_sfEyePointValid field.
inline
bool &TerrainBase::editEyePointValid(void)
{
    return _sfEyePointValid.getValue();
}

//! Get the value of the Terrain::_sfEyePointValid field.
inline
const bool &TerrainBase::getEyePointValid(void) const
{
    return _sfEyePointValid.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfEyePointValid field.
inline
bool &TerrainBase::getEyePointValid(void)
{
    return _sfEyePointValid.getValue();
}
#endif

//! Set the value of the Terrain::_sfEyePointValid field.
inline
void TerrainBase::setEyePointValid(const bool &value)
{
    _sfEyePointValid.setValue(value);
}

//! Get the value of the Terrain::_sfOriginX field.
inline
Real32 &TerrainBase::editOriginX(void)
{
    return _sfOriginX.getValue();
}

//! Get the value of the Terrain::_sfOriginX field.
inline
const Real32 &TerrainBase::getOriginX(void) const
{
    return _sfOriginX.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfOriginX field.
inline
Real32 &TerrainBase::getOriginX(void)
{
    return _sfOriginX.getValue();
}
#endif

//! Set the value of the Terrain::_sfOriginX field.
inline
void TerrainBase::setOriginX(const Real32 &value)
{
    _sfOriginX.setValue(value);
}

//! Get the value of the Terrain::_sfOriginY field.
inline
Real32 &TerrainBase::editOriginY(void)
{
    return _sfOriginY.getValue();
}

//! Get the value of the Terrain::_sfOriginY field.
inline
const Real32 &TerrainBase::getOriginY(void) const
{
    return _sfOriginY.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfOriginY field.
inline
Real32 &TerrainBase::getOriginY(void)
{
    return _sfOriginY.getValue();
}
#endif

//! Set the value of the Terrain::_sfOriginY field.
inline
void TerrainBase::setOriginY(const Real32 &value)
{
    _sfOriginY.setValue(value);
}

//! Get the value of the Terrain::_sfOriginTexX field.
inline
Real32 &TerrainBase::editOriginTexX(void)
{
    return _sfOriginTexX.getValue();
}

//! Get the value of the Terrain::_sfOriginTexX field.
inline
const Real32 &TerrainBase::getOriginTexX(void) const
{
    return _sfOriginTexX.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfOriginTexX field.
inline
Real32 &TerrainBase::getOriginTexX(void)
{
    return _sfOriginTexX.getValue();
}
#endif

//! Set the value of the Terrain::_sfOriginTexX field.
inline
void TerrainBase::setOriginTexX(const Real32 &value)
{
    _sfOriginTexX.setValue(value);
}

//! Get the value of the Terrain::_sfOriginTexY field.
inline
Real32 &TerrainBase::editOriginTexY(void)
{
    return _sfOriginTexY.getValue();
}

//! Get the value of the Terrain::_sfOriginTexY field.
inline
const Real32 &TerrainBase::getOriginTexY(void) const
{
    return _sfOriginTexY.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfOriginTexY field.
inline
Real32 &TerrainBase::getOriginTexY(void)
{
    return _sfOriginTexY.getValue();
}
#endif

//! Set the value of the Terrain::_sfOriginTexY field.
inline
void TerrainBase::setOriginTexY(const Real32 &value)
{
    _sfOriginTexY.setValue(value);
}

//! Get the value of the Terrain::_sfTexSpacing field.
inline
Real32 &TerrainBase::editTexSpacing(void)
{
    return _sfTexSpacing.getValue();
}

//! Get the value of the Terrain::_sfTexSpacing field.
inline
const Real32 &TerrainBase::getTexSpacing(void) const
{
    return _sfTexSpacing.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfTexSpacing field.
inline
Real32 &TerrainBase::getTexSpacing(void)
{
    return _sfTexSpacing.getValue();
}
#endif

//! Set the value of the Terrain::_sfTexSpacing field.
inline
void TerrainBase::setTexSpacing(const Real32 &value)
{
    _sfTexSpacing.setValue(value);
}

//! Get the value of the Terrain::_sfTexYSpacing field.
inline
Real32 &TerrainBase::editTexYSpacing(void)
{
    return _sfTexYSpacing.getValue();
}

//! Get the value of the Terrain::_sfTexYSpacing field.
inline
const Real32 &TerrainBase::getTexYSpacing(void) const
{
    return _sfTexYSpacing.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfTexYSpacing field.
inline
Real32 &TerrainBase::getTexYSpacing(void)
{
    return _sfTexYSpacing.getValue();
}
#endif

//! Set the value of the Terrain::_sfTexYSpacing field.
inline
void TerrainBase::setTexYSpacing(const Real32 &value)
{
    _sfTexYSpacing.setValue(value);
}

//! Get the value of the Terrain::_sfUpdateTerrain field.
inline
bool &TerrainBase::editUpdateTerrain(void)
{
    return _sfUpdateTerrain.getValue();
}

//! Get the value of the Terrain::_sfUpdateTerrain field.
inline
const bool &TerrainBase::getUpdateTerrain(void) const
{
    return _sfUpdateTerrain.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfUpdateTerrain field.
inline
bool &TerrainBase::getUpdateTerrain(void)
{
    return _sfUpdateTerrain.getValue();
}
#endif

//! Set the value of the Terrain::_sfUpdateTerrain field.
inline
void TerrainBase::setUpdateTerrain(const bool &value)
{
    _sfUpdateTerrain.setValue(value);
}

//! Get the value of the Terrain::_sfPerPixelLighting field.
inline
bool &TerrainBase::editPerPixelLighting(void)
{
    return _sfPerPixelLighting.getValue();
}

//! Get the value of the Terrain::_sfPerPixelLighting field.
inline
const bool &TerrainBase::getPerPixelLighting(void) const
{
    return _sfPerPixelLighting.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the Terrain::_sfPerPixelLighting field.
inline
bool &TerrainBase::getPerPixelLighting(void)
{
    return _sfPerPixelLighting.getValue();
}
#endif

//! Set the value of the Terrain::_sfPerPixelLighting field.
inline
void TerrainBase::setPerPixelLighting(const bool &value)
{
    _sfPerPixelLighting.setValue(value);
}


//! Get the value of the \a index element the Terrain::_mfHeightError field.
inline
Real32 &TerrainBase::editHeightError(const UInt32 index)
{
    return _mfHeightError[index];
}

//! Get the value of the \a index element the Terrain::_mfHeightError field.
inline
const Real32 &TerrainBase::getHeightError(const UInt32 index) const
{
    return _mfHeightError[index];
}

#ifndef OSG_2_PREP
//! Get the value of the \a index element the Terrain::_mfHeightError field.
inline
Real32 &TerrainBase::getHeightError(const UInt32 index)
{
    return _mfHeightError[index];
}

//! Get the Terrain::_mfHeightError field.
inline
MFReal32 &TerrainBase::getHeightError(void)
{
    return _mfHeightError;
}

//! Get the Terrain::_mfHeightError field.
inline
const MFReal32 &TerrainBase::getHeightError(void) const
{
    return _mfHeightError;
}

#endif

//! Get the value of the \a index element the Terrain::_mfHeightQuad field.
inline
Real32 &TerrainBase::editHeightQuad(const UInt32 index)
{
    return _mfHeightQuad[index];
}

//! Get the value of the \a index element the Terrain::_mfHeightQuad field.
inline
const Real32 &TerrainBase::getHeightQuad(const UInt32 index) const
{
    return _mfHeightQuad[index];
}

#ifndef OSG_2_PREP
//! Get the value of the \a index element the Terrain::_mfHeightQuad field.
inline
Real32 &TerrainBase::getHeightQuad(const UInt32 index)
{
    return _mfHeightQuad[index];
}

//! Get the Terrain::_mfHeightQuad field.
inline
MFReal32 &TerrainBase::getHeightQuad(void)
{
    return _mfHeightQuad;
}

//! Get the Terrain::_mfHeightQuad field.
inline
const MFReal32 &TerrainBase::getHeightQuad(void) const
{
    return _mfHeightQuad;
}

#endif

OSG_END_NAMESPACE

#define OSGTERRAINBASE_INLINE_CVSID "@(#)$Id: OSGTerrainBase.inl,v 1.9 2008/06/09 12:28:04 vossg Exp $"

