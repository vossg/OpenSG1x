/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class RenderOptions!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include "OSGConfig.h"

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &RenderOptionsBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 RenderOptionsBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
RenderOptionsPtr RenderOptionsBase::create(void) 
{
    RenderOptionsPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = RenderOptionsPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
RenderOptionsPtr RenderOptionsBase::createEmpty(void) 
{ 
    RenderOptionsPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the RenderOptions::_sfStatistic field.
inline
const SFBool *RenderOptionsBase::getSFStatistic(void) const
{
    return &_sfStatistic;
}

//! Get the RenderOptions::_sfStatistic field.
inline
SFBool *RenderOptionsBase::editSFStatistic(void)
{
    return &_sfStatistic;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfStatistic field.
inline
SFBool *RenderOptionsBase::getSFStatistic(void)
{
    return &_sfStatistic;
}
#endif

//! Get the RenderOptions::_sfPolygonMode field.
inline
const SFGLenum *RenderOptionsBase::getSFPolygonMode(void) const
{
    return &_sfPolygonMode;
}

//! Get the RenderOptions::_sfPolygonMode field.
inline
SFGLenum *RenderOptionsBase::editSFPolygonMode(void)
{
    return &_sfPolygonMode;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfPolygonMode field.
inline
SFGLenum *RenderOptionsBase::getSFPolygonMode(void)
{
    return &_sfPolygonMode;
}
#endif

//! Get the RenderOptions::_sfTwoSidedLighting field.
inline
const SFBool *RenderOptionsBase::getSFTwoSidedLighting(void) const
{
    return &_sfTwoSidedLighting;
}

//! Get the RenderOptions::_sfTwoSidedLighting field.
inline
SFBool *RenderOptionsBase::editSFTwoSidedLighting(void)
{
    return &_sfTwoSidedLighting;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfTwoSidedLighting field.
inline
SFBool *RenderOptionsBase::getSFTwoSidedLighting(void)
{
    return &_sfTwoSidedLighting;
}
#endif

//! Get the RenderOptions::_sfSpecTexLighting field.
inline
const SFBool *RenderOptionsBase::getSFSpecTexLighting(void) const
{
    return &_sfSpecTexLighting;
}

//! Get the RenderOptions::_sfSpecTexLighting field.
inline
SFBool *RenderOptionsBase::editSFSpecTexLighting(void)
{
    return &_sfSpecTexLighting;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfSpecTexLighting field.
inline
SFBool *RenderOptionsBase::getSFSpecTexLighting(void)
{
    return &_sfSpecTexLighting;
}
#endif

//! Get the RenderOptions::_sfSortTrans field.
inline
const SFBool *RenderOptionsBase::getSFSortTrans(void) const
{
    return &_sfSortTrans;
}

//! Get the RenderOptions::_sfSortTrans field.
inline
SFBool *RenderOptionsBase::editSFSortTrans(void)
{
    return &_sfSortTrans;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfSortTrans field.
inline
SFBool *RenderOptionsBase::getSFSortTrans(void)
{
    return &_sfSortTrans;
}
#endif

//! Get the RenderOptions::_sfZWriteTrans field.
inline
const SFBool *RenderOptionsBase::getSFZWriteTrans(void) const
{
    return &_sfZWriteTrans;
}

//! Get the RenderOptions::_sfZWriteTrans field.
inline
SFBool *RenderOptionsBase::editSFZWriteTrans(void)
{
    return &_sfZWriteTrans;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfZWriteTrans field.
inline
SFBool *RenderOptionsBase::getSFZWriteTrans(void)
{
    return &_sfZWriteTrans;
}
#endif

//! Get the RenderOptions::_sfLocalLights field.
inline
const SFBool *RenderOptionsBase::getSFLocalLights(void) const
{
    return &_sfLocalLights;
}

//! Get the RenderOptions::_sfLocalLights field.
inline
SFBool *RenderOptionsBase::editSFLocalLights(void)
{
    return &_sfLocalLights;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfLocalLights field.
inline
SFBool *RenderOptionsBase::getSFLocalLights(void)
{
    return &_sfLocalLights;
}
#endif

//! Get the RenderOptions::_sfCorrectTwoSidedLighting field.
inline
const SFBool *RenderOptionsBase::getSFCorrectTwoSidedLighting(void) const
{
    return &_sfCorrectTwoSidedLighting;
}

//! Get the RenderOptions::_sfCorrectTwoSidedLighting field.
inline
SFBool *RenderOptionsBase::editSFCorrectTwoSidedLighting(void)
{
    return &_sfCorrectTwoSidedLighting;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfCorrectTwoSidedLighting field.
inline
SFBool *RenderOptionsBase::getSFCorrectTwoSidedLighting(void)
{
    return &_sfCorrectTwoSidedLighting;
}
#endif

//! Get the RenderOptions::_sfOcclusionCulling field.
inline
const SFBool *RenderOptionsBase::getSFOcclusionCulling(void) const
{
    return &_sfOcclusionCulling;
}

//! Get the RenderOptions::_sfOcclusionCulling field.
inline
SFBool *RenderOptionsBase::editSFOcclusionCulling(void)
{
    return &_sfOcclusionCulling;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfOcclusionCulling field.
inline
SFBool *RenderOptionsBase::getSFOcclusionCulling(void)
{
    return &_sfOcclusionCulling;
}
#endif

//! Get the RenderOptions::_sfOcclusionCullingMode field.
inline
const SFInt32 *RenderOptionsBase::getSFOcclusionCullingMode(void) const
{
    return &_sfOcclusionCullingMode;
}

//! Get the RenderOptions::_sfOcclusionCullingMode field.
inline
SFInt32 *RenderOptionsBase::editSFOcclusionCullingMode(void)
{
    return &_sfOcclusionCullingMode;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfOcclusionCullingMode field.
inline
SFInt32 *RenderOptionsBase::getSFOcclusionCullingMode(void)
{
    return &_sfOcclusionCullingMode;
}
#endif

//! Get the RenderOptions::_sfOcclusionCullingPixels field.
inline
const SFUInt32 *RenderOptionsBase::getSFOcclusionCullingPixels(void) const
{
    return &_sfOcclusionCullingPixels;
}

//! Get the RenderOptions::_sfOcclusionCullingPixels field.
inline
SFUInt32 *RenderOptionsBase::editSFOcclusionCullingPixels(void)
{
    return &_sfOcclusionCullingPixels;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfOcclusionCullingPixels field.
inline
SFUInt32 *RenderOptionsBase::getSFOcclusionCullingPixels(void)
{
    return &_sfOcclusionCullingPixels;
}
#endif

//! Get the RenderOptions::_sfOcclusionCullingThreshold field.
inline
const SFUInt32 *RenderOptionsBase::getSFOcclusionCullingThreshold(void) const
{
    return &_sfOcclusionCullingThreshold;
}

//! Get the RenderOptions::_sfOcclusionCullingThreshold field.
inline
SFUInt32 *RenderOptionsBase::editSFOcclusionCullingThreshold(void)
{
    return &_sfOcclusionCullingThreshold;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfOcclusionCullingThreshold field.
inline
SFUInt32 *RenderOptionsBase::getSFOcclusionCullingThreshold(void)
{
    return &_sfOcclusionCullingThreshold;
}
#endif

//! Get the RenderOptions::_sfMultiSample field.
inline
const SFUInt32 *RenderOptionsBase::getSFMultiSample(void) const
{
    return &_sfMultiSample;
}

//! Get the RenderOptions::_sfMultiSample field.
inline
SFUInt32 *RenderOptionsBase::editSFMultiSample(void)
{
    return &_sfMultiSample;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfMultiSample field.
inline
SFUInt32 *RenderOptionsBase::getSFMultiSample(void)
{
    return &_sfMultiSample;
}
#endif

//! Get the RenderOptions::_sfMultiSampleFilterMode field.
inline
const SFUInt32 *RenderOptionsBase::getSFMultiSampleFilterMode(void) const
{
    return &_sfMultiSampleFilterMode;
}

//! Get the RenderOptions::_sfMultiSampleFilterMode field.
inline
SFUInt32 *RenderOptionsBase::editSFMultiSampleFilterMode(void)
{
    return &_sfMultiSampleFilterMode;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfMultiSampleFilterMode field.
inline
SFUInt32 *RenderOptionsBase::getSFMultiSampleFilterMode(void)
{
    return &_sfMultiSampleFilterMode;
}
#endif

//! Get the RenderOptions::_sfAntialiasing field.
inline
const SFBool *RenderOptionsBase::getSFAntialiasing(void) const
{
    return &_sfAntialiasing;
}

//! Get the RenderOptions::_sfAntialiasing field.
inline
SFBool *RenderOptionsBase::editSFAntialiasing(void)
{
    return &_sfAntialiasing;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfAntialiasing field.
inline
SFBool *RenderOptionsBase::getSFAntialiasing(void)
{
    return &_sfAntialiasing;
}
#endif

//! Get the RenderOptions::_sfAntialiasingDistance field.
inline
const SFReal32 *RenderOptionsBase::getSFAntialiasingDistance(void) const
{
    return &_sfAntialiasingDistance;
}

//! Get the RenderOptions::_sfAntialiasingDistance field.
inline
SFReal32 *RenderOptionsBase::editSFAntialiasingDistance(void)
{
    return &_sfAntialiasingDistance;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfAntialiasingDistance field.
inline
SFReal32 *RenderOptionsBase::getSFAntialiasingDistance(void)
{
    return &_sfAntialiasingDistance;
}
#endif

//! Get the RenderOptions::_sfAntialiasingScale field.
inline
const SFReal32 *RenderOptionsBase::getSFAntialiasingScale(void) const
{
    return &_sfAntialiasingScale;
}

//! Get the RenderOptions::_sfAntialiasingScale field.
inline
SFReal32 *RenderOptionsBase::editSFAntialiasingScale(void)
{
    return &_sfAntialiasingScale;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfAntialiasingScale field.
inline
SFReal32 *RenderOptionsBase::getSFAntialiasingScale(void)
{
    return &_sfAntialiasingScale;
}
#endif

//! Get the RenderOptions::_sfAntialiasingTrigger field.
inline
const SFUInt32 *RenderOptionsBase::getSFAntialiasingTrigger(void) const
{
    return &_sfAntialiasingTrigger;
}

//! Get the RenderOptions::_sfAntialiasingTrigger field.
inline
SFUInt32 *RenderOptionsBase::editSFAntialiasingTrigger(void)
{
    return &_sfAntialiasingTrigger;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfAntialiasingTrigger field.
inline
SFUInt32 *RenderOptionsBase::getSFAntialiasingTrigger(void)
{
    return &_sfAntialiasingTrigger;
}
#endif

//! Get the RenderOptions::_sfFrustumCulling field.
inline
const SFBool *RenderOptionsBase::getSFFrustumCulling(void) const
{
    return &_sfFrustumCulling;
}

//! Get the RenderOptions::_sfFrustumCulling field.
inline
SFBool *RenderOptionsBase::editSFFrustumCulling(void)
{
    return &_sfFrustumCulling;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfFrustumCulling field.
inline
SFBool *RenderOptionsBase::getSFFrustumCulling(void)
{
    return &_sfFrustumCulling;
}
#endif

//! Get the RenderOptions::_sfBackfaceCulling field.
inline
const SFBool *RenderOptionsBase::getSFBackfaceCulling(void) const
{
    return &_sfBackfaceCulling;
}

//! Get the RenderOptions::_sfBackfaceCulling field.
inline
SFBool *RenderOptionsBase::editSFBackfaceCulling(void)
{
    return &_sfBackfaceCulling;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfBackfaceCulling field.
inline
SFBool *RenderOptionsBase::getSFBackfaceCulling(void)
{
    return &_sfBackfaceCulling;
}
#endif

//! Get the RenderOptions::_sfSmallFeatureCulling field.
inline
const SFBool *RenderOptionsBase::getSFSmallFeatureCulling(void) const
{
    return &_sfSmallFeatureCulling;
}

//! Get the RenderOptions::_sfSmallFeatureCulling field.
inline
SFBool *RenderOptionsBase::editSFSmallFeatureCulling(void)
{
    return &_sfSmallFeatureCulling;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfSmallFeatureCulling field.
inline
SFBool *RenderOptionsBase::getSFSmallFeatureCulling(void)
{
    return &_sfSmallFeatureCulling;
}
#endif

//! Get the RenderOptions::_sfSmallFeatureCullingMode field.
inline
const SFInt32 *RenderOptionsBase::getSFSmallFeatureCullingMode(void) const
{
    return &_sfSmallFeatureCullingMode;
}

//! Get the RenderOptions::_sfSmallFeatureCullingMode field.
inline
SFInt32 *RenderOptionsBase::editSFSmallFeatureCullingMode(void)
{
    return &_sfSmallFeatureCullingMode;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfSmallFeatureCullingMode field.
inline
SFInt32 *RenderOptionsBase::getSFSmallFeatureCullingMode(void)
{
    return &_sfSmallFeatureCullingMode;
}
#endif

//! Get the RenderOptions::_sfSmallFeaturePixels field.
inline
const SFReal32 *RenderOptionsBase::getSFSmallFeaturePixels(void) const
{
    return &_sfSmallFeaturePixels;
}

//! Get the RenderOptions::_sfSmallFeaturePixels field.
inline
SFReal32 *RenderOptionsBase::editSFSmallFeaturePixels(void)
{
    return &_sfSmallFeaturePixels;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfSmallFeaturePixels field.
inline
SFReal32 *RenderOptionsBase::getSFSmallFeaturePixels(void)
{
    return &_sfSmallFeaturePixels;
}
#endif

//! Get the RenderOptions::_sfSmallFeatureThreshold field.
inline
const SFUInt32 *RenderOptionsBase::getSFSmallFeatureThreshold(void) const
{
    return &_sfSmallFeatureThreshold;
}

//! Get the RenderOptions::_sfSmallFeatureThreshold field.
inline
SFUInt32 *RenderOptionsBase::editSFSmallFeatureThreshold(void)
{
    return &_sfSmallFeatureThreshold;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfSmallFeatureThreshold field.
inline
SFUInt32 *RenderOptionsBase::getSFSmallFeatureThreshold(void)
{
    return &_sfSmallFeatureThreshold;
}
#endif

//! Get the RenderOptions::_sfFirstFrame field.
inline
const SFBool *RenderOptionsBase::getSFFirstFrame(void) const
{
    return &_sfFirstFrame;
}

//! Get the RenderOptions::_sfFirstFrame field.
inline
SFBool *RenderOptionsBase::editSFFirstFrame(void)
{
    return &_sfFirstFrame;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfFirstFrame field.
inline
SFBool *RenderOptionsBase::getSFFirstFrame(void)
{
    return &_sfFirstFrame;
}
#endif

//! Get the RenderOptions::_sfDepthOnlyPass field.
inline
const SFBool *RenderOptionsBase::getSFDepthOnlyPass(void) const
{
    return &_sfDepthOnlyPass;
}

//! Get the RenderOptions::_sfDepthOnlyPass field.
inline
SFBool *RenderOptionsBase::editSFDepthOnlyPass(void)
{
    return &_sfDepthOnlyPass;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfDepthOnlyPass field.
inline
SFBool *RenderOptionsBase::getSFDepthOnlyPass(void)
{
    return &_sfDepthOnlyPass;
}
#endif

//! Get the RenderOptions::_sfLightModelAmbient field.
inline
const SFColor4f *RenderOptionsBase::getSFLightModelAmbient(void) const
{
    return &_sfLightModelAmbient;
}

//! Get the RenderOptions::_sfLightModelAmbient field.
inline
SFColor4f *RenderOptionsBase::editSFLightModelAmbient(void)
{
    return &_sfLightModelAmbient;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfLightModelAmbient field.
inline
SFColor4f *RenderOptionsBase::getSFLightModelAmbient(void)
{
    return &_sfLightModelAmbient;
}
#endif

//! Get the RenderOptions::_sfFogColor field.
inline
const SFColor4f *RenderOptionsBase::getSFFogColor(void) const
{
    return &_sfFogColor;
}

//! Get the RenderOptions::_sfFogColor field.
inline
SFColor4f *RenderOptionsBase::editSFFogColor(void)
{
    return &_sfFogColor;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfFogColor field.
inline
SFColor4f *RenderOptionsBase::getSFFogColor(void)
{
    return &_sfFogColor;
}
#endif

//! Get the RenderOptions::_sfFogRange field.
inline
const SFVec2f *RenderOptionsBase::getSFFogRange(void) const
{
    return &_sfFogRange;
}

//! Get the RenderOptions::_sfFogRange field.
inline
SFVec2f *RenderOptionsBase::editSFFogRange(void)
{
    return &_sfFogRange;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfFogRange field.
inline
SFVec2f *RenderOptionsBase::getSFFogRange(void)
{
    return &_sfFogRange;
}
#endif

//! Get the RenderOptions::_sfFogDensity field.
inline
const SFReal32 *RenderOptionsBase::getSFFogDensity(void) const
{
    return &_sfFogDensity;
}

//! Get the RenderOptions::_sfFogDensity field.
inline
SFReal32 *RenderOptionsBase::editSFFogDensity(void)
{
    return &_sfFogDensity;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfFogDensity field.
inline
SFReal32 *RenderOptionsBase::getSFFogDensity(void)
{
    return &_sfFogDensity;
}
#endif

//! Get the RenderOptions::_sfFogMode field.
inline
const SFInt32 *RenderOptionsBase::getSFFogMode(void) const
{
    return &_sfFogMode;
}

//! Get the RenderOptions::_sfFogMode field.
inline
SFInt32 *RenderOptionsBase::editSFFogMode(void)
{
    return &_sfFogMode;
}

#ifndef OSG_2_PREP
//! Get the RenderOptions::_sfFogMode field.
inline
SFInt32 *RenderOptionsBase::getSFFogMode(void)
{
    return &_sfFogMode;
}
#endif


//! Get the value of the RenderOptions::_sfStatistic field.
inline
bool &RenderOptionsBase::editStatistic(void)
{
    return _sfStatistic.getValue();
}

//! Get the value of the RenderOptions::_sfStatistic field.
inline
const bool &RenderOptionsBase::getStatistic(void) const
{
    return _sfStatistic.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfStatistic field.
inline
bool &RenderOptionsBase::getStatistic(void)
{
    return _sfStatistic.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfStatistic field.
inline
void RenderOptionsBase::setStatistic(const bool &value)
{
    _sfStatistic.setValue(value);
}

//! Get the value of the RenderOptions::_sfPolygonMode field.
inline
GLenum &RenderOptionsBase::editPolygonMode(void)
{
    return _sfPolygonMode.getValue();
}

//! Get the value of the RenderOptions::_sfPolygonMode field.
inline
const GLenum &RenderOptionsBase::getPolygonMode(void) const
{
    return _sfPolygonMode.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfPolygonMode field.
inline
GLenum &RenderOptionsBase::getPolygonMode(void)
{
    return _sfPolygonMode.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfPolygonMode field.
inline
void RenderOptionsBase::setPolygonMode(const GLenum &value)
{
    _sfPolygonMode.setValue(value);
}

//! Get the value of the RenderOptions::_sfTwoSidedLighting field.
inline
bool &RenderOptionsBase::editTwoSidedLighting(void)
{
    return _sfTwoSidedLighting.getValue();
}

//! Get the value of the RenderOptions::_sfTwoSidedLighting field.
inline
const bool &RenderOptionsBase::getTwoSidedLighting(void) const
{
    return _sfTwoSidedLighting.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfTwoSidedLighting field.
inline
bool &RenderOptionsBase::getTwoSidedLighting(void)
{
    return _sfTwoSidedLighting.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfTwoSidedLighting field.
inline
void RenderOptionsBase::setTwoSidedLighting(const bool &value)
{
    _sfTwoSidedLighting.setValue(value);
}

//! Get the value of the RenderOptions::_sfSpecTexLighting field.
inline
bool &RenderOptionsBase::editSpecTexLighting(void)
{
    return _sfSpecTexLighting.getValue();
}

//! Get the value of the RenderOptions::_sfSpecTexLighting field.
inline
const bool &RenderOptionsBase::getSpecTexLighting(void) const
{
    return _sfSpecTexLighting.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfSpecTexLighting field.
inline
bool &RenderOptionsBase::getSpecTexLighting(void)
{
    return _sfSpecTexLighting.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfSpecTexLighting field.
inline
void RenderOptionsBase::setSpecTexLighting(const bool &value)
{
    _sfSpecTexLighting.setValue(value);
}

//! Get the value of the RenderOptions::_sfSortTrans field.
inline
bool &RenderOptionsBase::editSortTrans(void)
{
    return _sfSortTrans.getValue();
}

//! Get the value of the RenderOptions::_sfSortTrans field.
inline
const bool &RenderOptionsBase::getSortTrans(void) const
{
    return _sfSortTrans.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfSortTrans field.
inline
bool &RenderOptionsBase::getSortTrans(void)
{
    return _sfSortTrans.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfSortTrans field.
inline
void RenderOptionsBase::setSortTrans(const bool &value)
{
    _sfSortTrans.setValue(value);
}

//! Get the value of the RenderOptions::_sfZWriteTrans field.
inline
bool &RenderOptionsBase::editZWriteTrans(void)
{
    return _sfZWriteTrans.getValue();
}

//! Get the value of the RenderOptions::_sfZWriteTrans field.
inline
const bool &RenderOptionsBase::getZWriteTrans(void) const
{
    return _sfZWriteTrans.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfZWriteTrans field.
inline
bool &RenderOptionsBase::getZWriteTrans(void)
{
    return _sfZWriteTrans.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfZWriteTrans field.
inline
void RenderOptionsBase::setZWriteTrans(const bool &value)
{
    _sfZWriteTrans.setValue(value);
}

//! Get the value of the RenderOptions::_sfLocalLights field.
inline
bool &RenderOptionsBase::editLocalLights(void)
{
    return _sfLocalLights.getValue();
}

//! Get the value of the RenderOptions::_sfLocalLights field.
inline
const bool &RenderOptionsBase::getLocalLights(void) const
{
    return _sfLocalLights.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfLocalLights field.
inline
bool &RenderOptionsBase::getLocalLights(void)
{
    return _sfLocalLights.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfLocalLights field.
inline
void RenderOptionsBase::setLocalLights(const bool &value)
{
    _sfLocalLights.setValue(value);
}

//! Get the value of the RenderOptions::_sfCorrectTwoSidedLighting field.
inline
bool &RenderOptionsBase::editCorrectTwoSidedLighting(void)
{
    return _sfCorrectTwoSidedLighting.getValue();
}

//! Get the value of the RenderOptions::_sfCorrectTwoSidedLighting field.
inline
const bool &RenderOptionsBase::getCorrectTwoSidedLighting(void) const
{
    return _sfCorrectTwoSidedLighting.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfCorrectTwoSidedLighting field.
inline
bool &RenderOptionsBase::getCorrectTwoSidedLighting(void)
{
    return _sfCorrectTwoSidedLighting.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfCorrectTwoSidedLighting field.
inline
void RenderOptionsBase::setCorrectTwoSidedLighting(const bool &value)
{
    _sfCorrectTwoSidedLighting.setValue(value);
}

//! Get the value of the RenderOptions::_sfOcclusionCulling field.
inline
bool &RenderOptionsBase::editOcclusionCulling(void)
{
    return _sfOcclusionCulling.getValue();
}

//! Get the value of the RenderOptions::_sfOcclusionCulling field.
inline
const bool &RenderOptionsBase::getOcclusionCulling(void) const
{
    return _sfOcclusionCulling.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfOcclusionCulling field.
inline
bool &RenderOptionsBase::getOcclusionCulling(void)
{
    return _sfOcclusionCulling.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfOcclusionCulling field.
inline
void RenderOptionsBase::setOcclusionCulling(const bool &value)
{
    _sfOcclusionCulling.setValue(value);
}

//! Get the value of the RenderOptions::_sfOcclusionCullingMode field.
inline
Int32 &RenderOptionsBase::editOcclusionCullingMode(void)
{
    return _sfOcclusionCullingMode.getValue();
}

//! Get the value of the RenderOptions::_sfOcclusionCullingMode field.
inline
const Int32 &RenderOptionsBase::getOcclusionCullingMode(void) const
{
    return _sfOcclusionCullingMode.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfOcclusionCullingMode field.
inline
Int32 &RenderOptionsBase::getOcclusionCullingMode(void)
{
    return _sfOcclusionCullingMode.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfOcclusionCullingMode field.
inline
void RenderOptionsBase::setOcclusionCullingMode(const Int32 &value)
{
    _sfOcclusionCullingMode.setValue(value);
}

//! Get the value of the RenderOptions::_sfOcclusionCullingPixels field.
inline
UInt32 &RenderOptionsBase::editOcclusionCullingPixels(void)
{
    return _sfOcclusionCullingPixels.getValue();
}

//! Get the value of the RenderOptions::_sfOcclusionCullingPixels field.
inline
const UInt32 &RenderOptionsBase::getOcclusionCullingPixels(void) const
{
    return _sfOcclusionCullingPixels.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfOcclusionCullingPixels field.
inline
UInt32 &RenderOptionsBase::getOcclusionCullingPixels(void)
{
    return _sfOcclusionCullingPixels.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfOcclusionCullingPixels field.
inline
void RenderOptionsBase::setOcclusionCullingPixels(const UInt32 &value)
{
    _sfOcclusionCullingPixels.setValue(value);
}

//! Get the value of the RenderOptions::_sfOcclusionCullingThreshold field.
inline
UInt32 &RenderOptionsBase::editOcclusionCullingThreshold(void)
{
    return _sfOcclusionCullingThreshold.getValue();
}

//! Get the value of the RenderOptions::_sfOcclusionCullingThreshold field.
inline
const UInt32 &RenderOptionsBase::getOcclusionCullingThreshold(void) const
{
    return _sfOcclusionCullingThreshold.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfOcclusionCullingThreshold field.
inline
UInt32 &RenderOptionsBase::getOcclusionCullingThreshold(void)
{
    return _sfOcclusionCullingThreshold.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfOcclusionCullingThreshold field.
inline
void RenderOptionsBase::setOcclusionCullingThreshold(const UInt32 &value)
{
    _sfOcclusionCullingThreshold.setValue(value);
}

//! Get the value of the RenderOptions::_sfMultiSample field.
inline
UInt32 &RenderOptionsBase::editMultiSample(void)
{
    return _sfMultiSample.getValue();
}

//! Get the value of the RenderOptions::_sfMultiSample field.
inline
const UInt32 &RenderOptionsBase::getMultiSample(void) const
{
    return _sfMultiSample.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfMultiSample field.
inline
UInt32 &RenderOptionsBase::getMultiSample(void)
{
    return _sfMultiSample.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfMultiSample field.
inline
void RenderOptionsBase::setMultiSample(const UInt32 &value)
{
    _sfMultiSample.setValue(value);
}

//! Get the value of the RenderOptions::_sfMultiSampleFilterMode field.
inline
UInt32 &RenderOptionsBase::editMultiSampleFilterMode(void)
{
    return _sfMultiSampleFilterMode.getValue();
}

//! Get the value of the RenderOptions::_sfMultiSampleFilterMode field.
inline
const UInt32 &RenderOptionsBase::getMultiSampleFilterMode(void) const
{
    return _sfMultiSampleFilterMode.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfMultiSampleFilterMode field.
inline
UInt32 &RenderOptionsBase::getMultiSampleFilterMode(void)
{
    return _sfMultiSampleFilterMode.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfMultiSampleFilterMode field.
inline
void RenderOptionsBase::setMultiSampleFilterMode(const UInt32 &value)
{
    _sfMultiSampleFilterMode.setValue(value);
}

//! Get the value of the RenderOptions::_sfAntialiasing field.
inline
bool &RenderOptionsBase::editAntialiasing(void)
{
    return _sfAntialiasing.getValue();
}

//! Get the value of the RenderOptions::_sfAntialiasing field.
inline
const bool &RenderOptionsBase::getAntialiasing(void) const
{
    return _sfAntialiasing.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfAntialiasing field.
inline
bool &RenderOptionsBase::getAntialiasing(void)
{
    return _sfAntialiasing.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfAntialiasing field.
inline
void RenderOptionsBase::setAntialiasing(const bool &value)
{
    _sfAntialiasing.setValue(value);
}

//! Get the value of the RenderOptions::_sfAntialiasingDistance field.
inline
Real32 &RenderOptionsBase::editAntialiasingDistance(void)
{
    return _sfAntialiasingDistance.getValue();
}

//! Get the value of the RenderOptions::_sfAntialiasingDistance field.
inline
const Real32 &RenderOptionsBase::getAntialiasingDistance(void) const
{
    return _sfAntialiasingDistance.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfAntialiasingDistance field.
inline
Real32 &RenderOptionsBase::getAntialiasingDistance(void)
{
    return _sfAntialiasingDistance.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfAntialiasingDistance field.
inline
void RenderOptionsBase::setAntialiasingDistance(const Real32 &value)
{
    _sfAntialiasingDistance.setValue(value);
}

//! Get the value of the RenderOptions::_sfAntialiasingScale field.
inline
Real32 &RenderOptionsBase::editAntialiasingScale(void)
{
    return _sfAntialiasingScale.getValue();
}

//! Get the value of the RenderOptions::_sfAntialiasingScale field.
inline
const Real32 &RenderOptionsBase::getAntialiasingScale(void) const
{
    return _sfAntialiasingScale.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfAntialiasingScale field.
inline
Real32 &RenderOptionsBase::getAntialiasingScale(void)
{
    return _sfAntialiasingScale.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfAntialiasingScale field.
inline
void RenderOptionsBase::setAntialiasingScale(const Real32 &value)
{
    _sfAntialiasingScale.setValue(value);
}

//! Get the value of the RenderOptions::_sfAntialiasingTrigger field.
inline
UInt32 &RenderOptionsBase::editAntialiasingTrigger(void)
{
    return _sfAntialiasingTrigger.getValue();
}

//! Get the value of the RenderOptions::_sfAntialiasingTrigger field.
inline
const UInt32 &RenderOptionsBase::getAntialiasingTrigger(void) const
{
    return _sfAntialiasingTrigger.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfAntialiasingTrigger field.
inline
UInt32 &RenderOptionsBase::getAntialiasingTrigger(void)
{
    return _sfAntialiasingTrigger.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfAntialiasingTrigger field.
inline
void RenderOptionsBase::setAntialiasingTrigger(const UInt32 &value)
{
    _sfAntialiasingTrigger.setValue(value);
}

//! Get the value of the RenderOptions::_sfFrustumCulling field.
inline
bool &RenderOptionsBase::editFrustumCulling(void)
{
    return _sfFrustumCulling.getValue();
}

//! Get the value of the RenderOptions::_sfFrustumCulling field.
inline
const bool &RenderOptionsBase::getFrustumCulling(void) const
{
    return _sfFrustumCulling.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfFrustumCulling field.
inline
bool &RenderOptionsBase::getFrustumCulling(void)
{
    return _sfFrustumCulling.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfFrustumCulling field.
inline
void RenderOptionsBase::setFrustumCulling(const bool &value)
{
    _sfFrustumCulling.setValue(value);
}

//! Get the value of the RenderOptions::_sfBackfaceCulling field.
inline
bool &RenderOptionsBase::editBackfaceCulling(void)
{
    return _sfBackfaceCulling.getValue();
}

//! Get the value of the RenderOptions::_sfBackfaceCulling field.
inline
const bool &RenderOptionsBase::getBackfaceCulling(void) const
{
    return _sfBackfaceCulling.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfBackfaceCulling field.
inline
bool &RenderOptionsBase::getBackfaceCulling(void)
{
    return _sfBackfaceCulling.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfBackfaceCulling field.
inline
void RenderOptionsBase::setBackfaceCulling(const bool &value)
{
    _sfBackfaceCulling.setValue(value);
}

//! Get the value of the RenderOptions::_sfSmallFeatureCulling field.
inline
bool &RenderOptionsBase::editSmallFeatureCulling(void)
{
    return _sfSmallFeatureCulling.getValue();
}

//! Get the value of the RenderOptions::_sfSmallFeatureCulling field.
inline
const bool &RenderOptionsBase::getSmallFeatureCulling(void) const
{
    return _sfSmallFeatureCulling.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfSmallFeatureCulling field.
inline
bool &RenderOptionsBase::getSmallFeatureCulling(void)
{
    return _sfSmallFeatureCulling.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfSmallFeatureCulling field.
inline
void RenderOptionsBase::setSmallFeatureCulling(const bool &value)
{
    _sfSmallFeatureCulling.setValue(value);
}

//! Get the value of the RenderOptions::_sfSmallFeatureCullingMode field.
inline
Int32 &RenderOptionsBase::editSmallFeatureCullingMode(void)
{
    return _sfSmallFeatureCullingMode.getValue();
}

//! Get the value of the RenderOptions::_sfSmallFeatureCullingMode field.
inline
const Int32 &RenderOptionsBase::getSmallFeatureCullingMode(void) const
{
    return _sfSmallFeatureCullingMode.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfSmallFeatureCullingMode field.
inline
Int32 &RenderOptionsBase::getSmallFeatureCullingMode(void)
{
    return _sfSmallFeatureCullingMode.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfSmallFeatureCullingMode field.
inline
void RenderOptionsBase::setSmallFeatureCullingMode(const Int32 &value)
{
    _sfSmallFeatureCullingMode.setValue(value);
}

//! Get the value of the RenderOptions::_sfSmallFeaturePixels field.
inline
Real32 &RenderOptionsBase::editSmallFeaturePixels(void)
{
    return _sfSmallFeaturePixels.getValue();
}

//! Get the value of the RenderOptions::_sfSmallFeaturePixels field.
inline
const Real32 &RenderOptionsBase::getSmallFeaturePixels(void) const
{
    return _sfSmallFeaturePixels.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfSmallFeaturePixels field.
inline
Real32 &RenderOptionsBase::getSmallFeaturePixels(void)
{
    return _sfSmallFeaturePixels.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfSmallFeaturePixels field.
inline
void RenderOptionsBase::setSmallFeaturePixels(const Real32 &value)
{
    _sfSmallFeaturePixels.setValue(value);
}

//! Get the value of the RenderOptions::_sfSmallFeatureThreshold field.
inline
UInt32 &RenderOptionsBase::editSmallFeatureThreshold(void)
{
    return _sfSmallFeatureThreshold.getValue();
}

//! Get the value of the RenderOptions::_sfSmallFeatureThreshold field.
inline
const UInt32 &RenderOptionsBase::getSmallFeatureThreshold(void) const
{
    return _sfSmallFeatureThreshold.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfSmallFeatureThreshold field.
inline
UInt32 &RenderOptionsBase::getSmallFeatureThreshold(void)
{
    return _sfSmallFeatureThreshold.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfSmallFeatureThreshold field.
inline
void RenderOptionsBase::setSmallFeatureThreshold(const UInt32 &value)
{
    _sfSmallFeatureThreshold.setValue(value);
}

//! Get the value of the RenderOptions::_sfFirstFrame field.
inline
bool &RenderOptionsBase::editFirstFrame(void)
{
    return _sfFirstFrame.getValue();
}

//! Get the value of the RenderOptions::_sfFirstFrame field.
inline
const bool &RenderOptionsBase::getFirstFrame(void) const
{
    return _sfFirstFrame.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfFirstFrame field.
inline
bool &RenderOptionsBase::getFirstFrame(void)
{
    return _sfFirstFrame.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfFirstFrame field.
inline
void RenderOptionsBase::setFirstFrame(const bool &value)
{
    _sfFirstFrame.setValue(value);
}

//! Get the value of the RenderOptions::_sfDepthOnlyPass field.
inline
bool &RenderOptionsBase::editDepthOnlyPass(void)
{
    return _sfDepthOnlyPass.getValue();
}

//! Get the value of the RenderOptions::_sfDepthOnlyPass field.
inline
const bool &RenderOptionsBase::getDepthOnlyPass(void) const
{
    return _sfDepthOnlyPass.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfDepthOnlyPass field.
inline
bool &RenderOptionsBase::getDepthOnlyPass(void)
{
    return _sfDepthOnlyPass.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfDepthOnlyPass field.
inline
void RenderOptionsBase::setDepthOnlyPass(const bool &value)
{
    _sfDepthOnlyPass.setValue(value);
}

//! Get the value of the RenderOptions::_sfLightModelAmbient field.
inline
Color4f &RenderOptionsBase::editLightModelAmbient(void)
{
    return _sfLightModelAmbient.getValue();
}

//! Get the value of the RenderOptions::_sfLightModelAmbient field.
inline
const Color4f &RenderOptionsBase::getLightModelAmbient(void) const
{
    return _sfLightModelAmbient.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfLightModelAmbient field.
inline
Color4f &RenderOptionsBase::getLightModelAmbient(void)
{
    return _sfLightModelAmbient.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfLightModelAmbient field.
inline
void RenderOptionsBase::setLightModelAmbient(const Color4f &value)
{
    _sfLightModelAmbient.setValue(value);
}

//! Get the value of the RenderOptions::_sfFogColor field.
inline
Color4f &RenderOptionsBase::editFogColor(void)
{
    return _sfFogColor.getValue();
}

//! Get the value of the RenderOptions::_sfFogColor field.
inline
const Color4f &RenderOptionsBase::getFogColor(void) const
{
    return _sfFogColor.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfFogColor field.
inline
Color4f &RenderOptionsBase::getFogColor(void)
{
    return _sfFogColor.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfFogColor field.
inline
void RenderOptionsBase::setFogColor(const Color4f &value)
{
    _sfFogColor.setValue(value);
}

//! Get the value of the RenderOptions::_sfFogRange field.
inline
Vec2f &RenderOptionsBase::editFogRange(void)
{
    return _sfFogRange.getValue();
}

//! Get the value of the RenderOptions::_sfFogRange field.
inline
const Vec2f &RenderOptionsBase::getFogRange(void) const
{
    return _sfFogRange.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfFogRange field.
inline
Vec2f &RenderOptionsBase::getFogRange(void)
{
    return _sfFogRange.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfFogRange field.
inline
void RenderOptionsBase::setFogRange(const Vec2f &value)
{
    _sfFogRange.setValue(value);
}

//! Get the value of the RenderOptions::_sfFogDensity field.
inline
Real32 &RenderOptionsBase::editFogDensity(void)
{
    return _sfFogDensity.getValue();
}

//! Get the value of the RenderOptions::_sfFogDensity field.
inline
const Real32 &RenderOptionsBase::getFogDensity(void) const
{
    return _sfFogDensity.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfFogDensity field.
inline
Real32 &RenderOptionsBase::getFogDensity(void)
{
    return _sfFogDensity.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfFogDensity field.
inline
void RenderOptionsBase::setFogDensity(const Real32 &value)
{
    _sfFogDensity.setValue(value);
}

//! Get the value of the RenderOptions::_sfFogMode field.
inline
Int32 &RenderOptionsBase::editFogMode(void)
{
    return _sfFogMode.getValue();
}

//! Get the value of the RenderOptions::_sfFogMode field.
inline
const Int32 &RenderOptionsBase::getFogMode(void) const
{
    return _sfFogMode.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the RenderOptions::_sfFogMode field.
inline
Int32 &RenderOptionsBase::getFogMode(void)
{
    return _sfFogMode.getValue();
}
#endif

//! Set the value of the RenderOptions::_sfFogMode field.
inline
void RenderOptionsBase::setFogMode(const Int32 &value)
{
    _sfFogMode.setValue(value);
}


OSG_END_NAMESPACE

#define OSGRENDEROPTIONSBASE_INLINE_CVSID "@(#)$Id: OSGRenderOptionsBase.inl,v 1.15 2011/01/13 16:23:03 macnihilist Exp $"

