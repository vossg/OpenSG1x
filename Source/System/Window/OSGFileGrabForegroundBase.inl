/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class FileGrabForeground!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include "OSGConfig.h"

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &FileGrabForegroundBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 FileGrabForegroundBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
FileGrabForegroundPtr FileGrabForegroundBase::create(void) 
{
    FileGrabForegroundPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = FileGrabForegroundPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
FileGrabForegroundPtr FileGrabForegroundBase::createEmpty(void) 
{ 
    FileGrabForegroundPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the FileGrabForeground::_sfName field.
inline
const SFString *FileGrabForegroundBase::getSFName(void) const
{
    return &_sfName;
}

//! Get the FileGrabForeground::_sfName field.
inline
SFString *FileGrabForegroundBase::editSFName(void)
{
    return &_sfName;
}

#ifndef OSG_2_PREP
//! Get the FileGrabForeground::_sfName field.
inline
SFString *FileGrabForegroundBase::getSFName(void)
{
    return &_sfName;
}
#endif

//! Get the FileGrabForeground::_sfFrame field.
inline
const SFUInt32 *FileGrabForegroundBase::getSFFrame(void) const
{
    return &_sfFrame;
}

//! Get the FileGrabForeground::_sfFrame field.
inline
SFUInt32 *FileGrabForegroundBase::editSFFrame(void)
{
    return &_sfFrame;
}

#ifndef OSG_2_PREP
//! Get the FileGrabForeground::_sfFrame field.
inline
SFUInt32 *FileGrabForegroundBase::getSFFrame(void)
{
    return &_sfFrame;
}
#endif

//! Get the FileGrabForeground::_sfIncrement field.
inline
const SFBool *FileGrabForegroundBase::getSFIncrement(void) const
{
    return &_sfIncrement;
}

//! Get the FileGrabForeground::_sfIncrement field.
inline
SFBool *FileGrabForegroundBase::editSFIncrement(void)
{
    return &_sfIncrement;
}

#ifndef OSG_2_PREP
//! Get the FileGrabForeground::_sfIncrement field.
inline
SFBool *FileGrabForegroundBase::getSFIncrement(void)
{
    return &_sfIncrement;
}
#endif

//! Get the FileGrabForeground::_sfPixelFormat field.
inline
const SFUInt32 *FileGrabForegroundBase::getSFPixelFormat(void) const
{
    return &_sfPixelFormat;
}

//! Get the FileGrabForeground::_sfPixelFormat field.
inline
SFUInt32 *FileGrabForegroundBase::editSFPixelFormat(void)
{
    return &_sfPixelFormat;
}

#ifndef OSG_2_PREP
//! Get the FileGrabForeground::_sfPixelFormat field.
inline
SFUInt32 *FileGrabForegroundBase::getSFPixelFormat(void)
{
    return &_sfPixelFormat;
}
#endif


//! Get the value of the FileGrabForeground::_sfName field.
inline
std::string &FileGrabForegroundBase::editName(void)
{
    return _sfName.getValue();
}

//! Get the value of the FileGrabForeground::_sfName field.
inline
const std::string &FileGrabForegroundBase::getName(void) const
{
    return _sfName.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the FileGrabForeground::_sfName field.
inline
std::string &FileGrabForegroundBase::getName(void)
{
    return _sfName.getValue();
}
#endif

//! Set the value of the FileGrabForeground::_sfName field.
inline
void FileGrabForegroundBase::setName(const std::string &value)
{
    _sfName.setValue(value);
}

//! Get the value of the FileGrabForeground::_sfFrame field.
inline
UInt32 &FileGrabForegroundBase::editFrame(void)
{
    return _sfFrame.getValue();
}

//! Get the value of the FileGrabForeground::_sfFrame field.
inline
const UInt32 &FileGrabForegroundBase::getFrame(void) const
{
    return _sfFrame.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the FileGrabForeground::_sfFrame field.
inline
UInt32 &FileGrabForegroundBase::getFrame(void)
{
    return _sfFrame.getValue();
}
#endif

//! Set the value of the FileGrabForeground::_sfFrame field.
inline
void FileGrabForegroundBase::setFrame(const UInt32 &value)
{
    _sfFrame.setValue(value);
}

//! Get the value of the FileGrabForeground::_sfIncrement field.
inline
bool &FileGrabForegroundBase::editIncrement(void)
{
    return _sfIncrement.getValue();
}

//! Get the value of the FileGrabForeground::_sfIncrement field.
inline
const bool &FileGrabForegroundBase::getIncrement(void) const
{
    return _sfIncrement.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the FileGrabForeground::_sfIncrement field.
inline
bool &FileGrabForegroundBase::getIncrement(void)
{
    return _sfIncrement.getValue();
}
#endif

//! Set the value of the FileGrabForeground::_sfIncrement field.
inline
void FileGrabForegroundBase::setIncrement(const bool &value)
{
    _sfIncrement.setValue(value);
}

//! Get the value of the FileGrabForeground::_sfPixelFormat field.
inline
UInt32 &FileGrabForegroundBase::editPixelFormat(void)
{
    return _sfPixelFormat.getValue();
}

//! Get the value of the FileGrabForeground::_sfPixelFormat field.
inline
const UInt32 &FileGrabForegroundBase::getPixelFormat(void) const
{
    return _sfPixelFormat.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the FileGrabForeground::_sfPixelFormat field.
inline
UInt32 &FileGrabForegroundBase::getPixelFormat(void)
{
    return _sfPixelFormat.getValue();
}
#endif

//! Set the value of the FileGrabForeground::_sfPixelFormat field.
inline
void FileGrabForegroundBase::setPixelFormat(const UInt32 &value)
{
    _sfPixelFormat.setValue(value);
}


OSG_END_NAMESPACE

#define OSGFILEGRABFOREGROUNDBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.22 2008/06/09 12:26:59 vossg Exp $"

