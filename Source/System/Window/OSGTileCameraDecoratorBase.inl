/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class TileCameraDecorator!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include "OSGConfig.h"

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &TileCameraDecoratorBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 TileCameraDecoratorBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
TileCameraDecoratorPtr TileCameraDecoratorBase::create(void) 
{
    TileCameraDecoratorPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = TileCameraDecoratorPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
TileCameraDecoratorPtr TileCameraDecoratorBase::createEmpty(void) 
{ 
    TileCameraDecoratorPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the TileCameraDecorator::_sfLeft field.
inline
const SFReal32 *TileCameraDecoratorBase::getSFLeft(void) const
{
    return &_sfLeft;
}

//! Get the TileCameraDecorator::_sfLeft field.
inline
SFReal32 *TileCameraDecoratorBase::editSFLeft(void)
{
    return &_sfLeft;
}

#ifndef OSG_2_PREP
//! Get the TileCameraDecorator::_sfLeft field.
inline
SFReal32 *TileCameraDecoratorBase::getSFLeft(void)
{
    return &_sfLeft;
}
#endif

//! Get the TileCameraDecorator::_sfRight field.
inline
const SFReal32 *TileCameraDecoratorBase::getSFRight(void) const
{
    return &_sfRight;
}

//! Get the TileCameraDecorator::_sfRight field.
inline
SFReal32 *TileCameraDecoratorBase::editSFRight(void)
{
    return &_sfRight;
}

#ifndef OSG_2_PREP
//! Get the TileCameraDecorator::_sfRight field.
inline
SFReal32 *TileCameraDecoratorBase::getSFRight(void)
{
    return &_sfRight;
}
#endif

//! Get the TileCameraDecorator::_sfBottom field.
inline
const SFReal32 *TileCameraDecoratorBase::getSFBottom(void) const
{
    return &_sfBottom;
}

//! Get the TileCameraDecorator::_sfBottom field.
inline
SFReal32 *TileCameraDecoratorBase::editSFBottom(void)
{
    return &_sfBottom;
}

#ifndef OSG_2_PREP
//! Get the TileCameraDecorator::_sfBottom field.
inline
SFReal32 *TileCameraDecoratorBase::getSFBottom(void)
{
    return &_sfBottom;
}
#endif

//! Get the TileCameraDecorator::_sfTop field.
inline
const SFReal32 *TileCameraDecoratorBase::getSFTop(void) const
{
    return &_sfTop;
}

//! Get the TileCameraDecorator::_sfTop field.
inline
SFReal32 *TileCameraDecoratorBase::editSFTop(void)
{
    return &_sfTop;
}

#ifndef OSG_2_PREP
//! Get the TileCameraDecorator::_sfTop field.
inline
SFReal32 *TileCameraDecoratorBase::getSFTop(void)
{
    return &_sfTop;
}
#endif

//! Get the TileCameraDecorator::_sfFullWidth field.
inline
const SFUInt32 *TileCameraDecoratorBase::getSFFullWidth(void) const
{
    return &_sfFullWidth;
}

//! Get the TileCameraDecorator::_sfFullWidth field.
inline
SFUInt32 *TileCameraDecoratorBase::editSFFullWidth(void)
{
    return &_sfFullWidth;
}

#ifndef OSG_2_PREP
//! Get the TileCameraDecorator::_sfFullWidth field.
inline
SFUInt32 *TileCameraDecoratorBase::getSFFullWidth(void)
{
    return &_sfFullWidth;
}
#endif

//! Get the TileCameraDecorator::_sfFullHeight field.
inline
const SFUInt32 *TileCameraDecoratorBase::getSFFullHeight(void) const
{
    return &_sfFullHeight;
}

//! Get the TileCameraDecorator::_sfFullHeight field.
inline
SFUInt32 *TileCameraDecoratorBase::editSFFullHeight(void)
{
    return &_sfFullHeight;
}

#ifndef OSG_2_PREP
//! Get the TileCameraDecorator::_sfFullHeight field.
inline
SFUInt32 *TileCameraDecoratorBase::getSFFullHeight(void)
{
    return &_sfFullHeight;
}
#endif


//! Get the value of the TileCameraDecorator::_sfLeft field.
inline
Real32 &TileCameraDecoratorBase::editLeft(void)
{
    return _sfLeft.getValue();
}

//! Get the value of the TileCameraDecorator::_sfLeft field.
inline
const Real32 &TileCameraDecoratorBase::getLeft(void) const
{
    return _sfLeft.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the TileCameraDecorator::_sfLeft field.
inline
Real32 &TileCameraDecoratorBase::getLeft(void)
{
    return _sfLeft.getValue();
}
#endif

//! Set the value of the TileCameraDecorator::_sfLeft field.
inline
void TileCameraDecoratorBase::setLeft(const Real32 &value)
{
    _sfLeft.setValue(value);
}

//! Get the value of the TileCameraDecorator::_sfRight field.
inline
Real32 &TileCameraDecoratorBase::editRight(void)
{
    return _sfRight.getValue();
}

//! Get the value of the TileCameraDecorator::_sfRight field.
inline
const Real32 &TileCameraDecoratorBase::getRight(void) const
{
    return _sfRight.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the TileCameraDecorator::_sfRight field.
inline
Real32 &TileCameraDecoratorBase::getRight(void)
{
    return _sfRight.getValue();
}
#endif

//! Set the value of the TileCameraDecorator::_sfRight field.
inline
void TileCameraDecoratorBase::setRight(const Real32 &value)
{
    _sfRight.setValue(value);
}

//! Get the value of the TileCameraDecorator::_sfBottom field.
inline
Real32 &TileCameraDecoratorBase::editBottom(void)
{
    return _sfBottom.getValue();
}

//! Get the value of the TileCameraDecorator::_sfBottom field.
inline
const Real32 &TileCameraDecoratorBase::getBottom(void) const
{
    return _sfBottom.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the TileCameraDecorator::_sfBottom field.
inline
Real32 &TileCameraDecoratorBase::getBottom(void)
{
    return _sfBottom.getValue();
}
#endif

//! Set the value of the TileCameraDecorator::_sfBottom field.
inline
void TileCameraDecoratorBase::setBottom(const Real32 &value)
{
    _sfBottom.setValue(value);
}

//! Get the value of the TileCameraDecorator::_sfTop field.
inline
Real32 &TileCameraDecoratorBase::editTop(void)
{
    return _sfTop.getValue();
}

//! Get the value of the TileCameraDecorator::_sfTop field.
inline
const Real32 &TileCameraDecoratorBase::getTop(void) const
{
    return _sfTop.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the TileCameraDecorator::_sfTop field.
inline
Real32 &TileCameraDecoratorBase::getTop(void)
{
    return _sfTop.getValue();
}
#endif

//! Set the value of the TileCameraDecorator::_sfTop field.
inline
void TileCameraDecoratorBase::setTop(const Real32 &value)
{
    _sfTop.setValue(value);
}

//! Get the value of the TileCameraDecorator::_sfFullWidth field.
inline
UInt32 &TileCameraDecoratorBase::editFullWidth(void)
{
    return _sfFullWidth.getValue();
}

//! Get the value of the TileCameraDecorator::_sfFullWidth field.
inline
const UInt32 &TileCameraDecoratorBase::getFullWidth(void) const
{
    return _sfFullWidth.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the TileCameraDecorator::_sfFullWidth field.
inline
UInt32 &TileCameraDecoratorBase::getFullWidth(void)
{
    return _sfFullWidth.getValue();
}
#endif

//! Set the value of the TileCameraDecorator::_sfFullWidth field.
inline
void TileCameraDecoratorBase::setFullWidth(const UInt32 &value)
{
    _sfFullWidth.setValue(value);
}

//! Get the value of the TileCameraDecorator::_sfFullHeight field.
inline
UInt32 &TileCameraDecoratorBase::editFullHeight(void)
{
    return _sfFullHeight.getValue();
}

//! Get the value of the TileCameraDecorator::_sfFullHeight field.
inline
const UInt32 &TileCameraDecoratorBase::getFullHeight(void) const
{
    return _sfFullHeight.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the TileCameraDecorator::_sfFullHeight field.
inline
UInt32 &TileCameraDecoratorBase::getFullHeight(void)
{
    return _sfFullHeight.getValue();
}
#endif

//! Set the value of the TileCameraDecorator::_sfFullHeight field.
inline
void TileCameraDecoratorBase::setFullHeight(const UInt32 &value)
{
    _sfFullHeight.setValue(value);
}


OSG_END_NAMESPACE

#define OSGTILECAMERADECORATORBASE_INLINE_CVSID "@(#)$Id: FCBaseTemplate_inl.h,v 1.21 2008/06/09 07:30:44 vossg Exp $"

