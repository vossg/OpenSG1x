/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class FogChunk
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGFOGCHUNKBASE_H_
#define _OSGFOGCHUNKBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGConfig.h"
#include "OSGSystemDef.h"

#include "OSGBaseTypes.h"
#include "OSGRefPtr.h"
#include "OSGCoredNodePtr.h"

#include "OSGStateChunk.h" // Parent

#include "OSGGLenumFields.h" // Mode type
#include "OSGColor4fFields.h" // Color type
#include "OSGReal32Fields.h" // Start type
#include "OSGReal32Fields.h" // End type
#include "OSGReal32Fields.h" // Density type

#include "OSGFogChunkFields.h"

OSG_BEGIN_NAMESPACE

class FogChunk;
class BinaryDataHandler;

//! \brief FogChunk Base Class.

class OSG_SYSTEMLIB_DLLMAPPING FogChunkBase : public StateChunk
{
  private:

    typedef StateChunk    Inherited;

    /*==========================  PUBLIC  =================================*/
  public:

    typedef FogChunkPtr  Ptr;

    enum
    {
        ModeFieldId    = Inherited::NextFieldId,
        ColorFieldId   = ModeFieldId    + 1,
        StartFieldId   = ColorFieldId   + 1,
        EndFieldId     = StartFieldId   + 1,
        DensityFieldId = EndFieldId     + 1,
        NextFieldId    = DensityFieldId + 1
    };

    static const OSG::BitVector ModeFieldMask;
    static const OSG::BitVector ColorFieldMask;
    static const OSG::BitVector StartFieldMask;
    static const OSG::BitVector EndFieldMask;
    static const OSG::BitVector DensityFieldMask;


    static const OSG::BitVector MTInfluenceMask;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static        FieldContainerType &getClassType    (void); 
    static        UInt32              getClassTypeId  (void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType  (void); 
    virtual const FieldContainerType &getType  (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


           SFGLenum            *editSFMode           (void);
     const SFGLenum            *getSFMode           (void) const;
#ifndef OSG_2_PREP
           SFGLenum            *getSFMode           (void);
#endif

           SFColor4f           *editSFColor          (void);
     const SFColor4f           *getSFColor          (void) const;
#ifndef OSG_2_PREP
           SFColor4f           *getSFColor          (void);
#endif

           SFReal32            *editSFStart          (void);
     const SFReal32            *getSFStart          (void) const;
#ifndef OSG_2_PREP
           SFReal32            *getSFStart          (void);
#endif

           SFReal32            *editSFEnd            (void);
     const SFReal32            *getSFEnd            (void) const;
#ifndef OSG_2_PREP
           SFReal32            *getSFEnd            (void);
#endif

           SFReal32            *editSFDensity        (void);
     const SFReal32            *getSFDensity        (void) const;
#ifndef OSG_2_PREP
           SFReal32            *getSFDensity        (void);
#endif


           GLenum              &editMode           (void);
     const GLenum              &getMode           (void) const;
#ifndef OSG_2_PREP
           GLenum              &getMode           (void);
#endif

           Color4f             &editColor          (void);
     const Color4f             &getColor          (void) const;
#ifndef OSG_2_PREP
           Color4f             &getColor          (void);
#endif

           Real32              &editStart          (void);
     const Real32              &getStart          (void) const;
#ifndef OSG_2_PREP
           Real32              &getStart          (void);
#endif

           Real32              &editEnd            (void);
     const Real32              &getEnd            (void) const;
#ifndef OSG_2_PREP
           Real32              &getEnd            (void);
#endif

           Real32              &editDensity        (void);
     const Real32              &getDensity        (void) const;
#ifndef OSG_2_PREP
           Real32              &getDensity        (void);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

     void setMode           ( const GLenum &value );
     void setColor          ( const Color4f &value );
     void setStart          ( const Real32 &value );
     void setEnd            ( const Real32 &value );
     void setDensity        ( const Real32 &value );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (const BitVector         &whichField);
    virtual void   copyToBin  (      BinaryDataHandler &pMem,
                               const BitVector         &whichField);
    virtual void   copyFromBin(      BinaryDataHandler &pMem,
                               const BitVector         &whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  FogChunkPtr      create          (void); 
    static  FogChunkPtr      createEmpty     (void); 

    /*! \}                                                                 */

    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerPtr     shallowCopy     (void) const; 

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/
  protected:

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFGLenum            _sfMode;
    SFColor4f           _sfColor;
    SFReal32            _sfStart;
    SFReal32            _sfEnd;
    SFReal32            _sfDensity;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    FogChunkBase(void);
    FogChunkBase(const FogChunkBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~FogChunkBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#if !defined(OSG_FIXED_MFIELDSYNC)
    void executeSyncImpl(      FogChunkBase *pOther,
                         const BitVector         &whichField);

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField);
#else
    void executeSyncImpl(      FogChunkBase *pOther,
                         const BitVector         &whichField,
                         const SyncInfo          &sInfo     );

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField,
                               const SyncInfo          &sInfo);

    virtual void execBeginEdit     (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

            void execBeginEditImpl (const BitVector &whichField,
                                          UInt32     uiAspect,
                                          UInt32     uiContainerSize);

    virtual void onDestroyAspect(UInt32 uiId, UInt32 uiAspect);
#endif

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:

    friend class FieldContainer;

    static FieldDescription   *_desc[];
    static FieldContainerType  _type;


    // prohibit default functions (move to 'public' if you need one)
    void operator =(const FogChunkBase &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


typedef FogChunkBase *FogChunkBaseP;

typedef osgIF<FogChunkBase::isNodeCore,
              CoredNodePtr<FogChunk>,
              FieldContainer::attempt_to_create_CoredNodePtr_on_non_NodeCore_FC
              >::_IRet FogChunkNodePtr;

typedef RefPtr<FogChunkPtr> FogChunkRefPtr;

OSG_END_NAMESPACE

#define OSGFOGCHUNKBASE_HEADER_CVSID "@(#)$Id: OSGFogChunkBase.h,v 1.2 2009/11/13 18:07:01 neumannc Exp $"

#endif /* _OSGFOGCHUNKBASE_H_ */
