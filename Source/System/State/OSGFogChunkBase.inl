/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class FogChunk!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include "OSGConfig.h"

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &FogChunkBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 FogChunkBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
FogChunkPtr FogChunkBase::create(void) 
{
    FogChunkPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = FogChunkPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
FogChunkPtr FogChunkBase::createEmpty(void) 
{ 
    FogChunkPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the FogChunk::_sfMode field.
inline
const SFGLenum *FogChunkBase::getSFMode(void) const
{
    return &_sfMode;
}

//! Get the FogChunk::_sfMode field.
inline
SFGLenum *FogChunkBase::editSFMode(void)
{
    return &_sfMode;
}

#ifndef OSG_2_PREP
//! Get the FogChunk::_sfMode field.
inline
SFGLenum *FogChunkBase::getSFMode(void)
{
    return &_sfMode;
}
#endif

//! Get the FogChunk::_sfColor field.
inline
const SFColor4f *FogChunkBase::getSFColor(void) const
{
    return &_sfColor;
}

//! Get the FogChunk::_sfColor field.
inline
SFColor4f *FogChunkBase::editSFColor(void)
{
    return &_sfColor;
}

#ifndef OSG_2_PREP
//! Get the FogChunk::_sfColor field.
inline
SFColor4f *FogChunkBase::getSFColor(void)
{
    return &_sfColor;
}
#endif

//! Get the FogChunk::_sfStart field.
inline
const SFReal32 *FogChunkBase::getSFStart(void) const
{
    return &_sfStart;
}

//! Get the FogChunk::_sfStart field.
inline
SFReal32 *FogChunkBase::editSFStart(void)
{
    return &_sfStart;
}

#ifndef OSG_2_PREP
//! Get the FogChunk::_sfStart field.
inline
SFReal32 *FogChunkBase::getSFStart(void)
{
    return &_sfStart;
}
#endif

//! Get the FogChunk::_sfEnd field.
inline
const SFReal32 *FogChunkBase::getSFEnd(void) const
{
    return &_sfEnd;
}

//! Get the FogChunk::_sfEnd field.
inline
SFReal32 *FogChunkBase::editSFEnd(void)
{
    return &_sfEnd;
}

#ifndef OSG_2_PREP
//! Get the FogChunk::_sfEnd field.
inline
SFReal32 *FogChunkBase::getSFEnd(void)
{
    return &_sfEnd;
}
#endif

//! Get the FogChunk::_sfDensity field.
inline
const SFReal32 *FogChunkBase::getSFDensity(void) const
{
    return &_sfDensity;
}

//! Get the FogChunk::_sfDensity field.
inline
SFReal32 *FogChunkBase::editSFDensity(void)
{
    return &_sfDensity;
}

#ifndef OSG_2_PREP
//! Get the FogChunk::_sfDensity field.
inline
SFReal32 *FogChunkBase::getSFDensity(void)
{
    return &_sfDensity;
}
#endif


//! Get the value of the FogChunk::_sfMode field.
inline
GLenum &FogChunkBase::editMode(void)
{
    return _sfMode.getValue();
}

//! Get the value of the FogChunk::_sfMode field.
inline
const GLenum &FogChunkBase::getMode(void) const
{
    return _sfMode.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the FogChunk::_sfMode field.
inline
GLenum &FogChunkBase::getMode(void)
{
    return _sfMode.getValue();
}
#endif

//! Set the value of the FogChunk::_sfMode field.
inline
void FogChunkBase::setMode(const GLenum &value)
{
    _sfMode.setValue(value);
}

//! Get the value of the FogChunk::_sfColor field.
inline
Color4f &FogChunkBase::editColor(void)
{
    return _sfColor.getValue();
}

//! Get the value of the FogChunk::_sfColor field.
inline
const Color4f &FogChunkBase::getColor(void) const
{
    return _sfColor.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the FogChunk::_sfColor field.
inline
Color4f &FogChunkBase::getColor(void)
{
    return _sfColor.getValue();
}
#endif

//! Set the value of the FogChunk::_sfColor field.
inline
void FogChunkBase::setColor(const Color4f &value)
{
    _sfColor.setValue(value);
}

//! Get the value of the FogChunk::_sfStart field.
inline
Real32 &FogChunkBase::editStart(void)
{
    return _sfStart.getValue();
}

//! Get the value of the FogChunk::_sfStart field.
inline
const Real32 &FogChunkBase::getStart(void) const
{
    return _sfStart.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the FogChunk::_sfStart field.
inline
Real32 &FogChunkBase::getStart(void)
{
    return _sfStart.getValue();
}
#endif

//! Set the value of the FogChunk::_sfStart field.
inline
void FogChunkBase::setStart(const Real32 &value)
{
    _sfStart.setValue(value);
}

//! Get the value of the FogChunk::_sfEnd field.
inline
Real32 &FogChunkBase::editEnd(void)
{
    return _sfEnd.getValue();
}

//! Get the value of the FogChunk::_sfEnd field.
inline
const Real32 &FogChunkBase::getEnd(void) const
{
    return _sfEnd.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the FogChunk::_sfEnd field.
inline
Real32 &FogChunkBase::getEnd(void)
{
    return _sfEnd.getValue();
}
#endif

//! Set the value of the FogChunk::_sfEnd field.
inline
void FogChunkBase::setEnd(const Real32 &value)
{
    _sfEnd.setValue(value);
}

//! Get the value of the FogChunk::_sfDensity field.
inline
Real32 &FogChunkBase::editDensity(void)
{
    return _sfDensity.getValue();
}

//! Get the value of the FogChunk::_sfDensity field.
inline
const Real32 &FogChunkBase::getDensity(void) const
{
    return _sfDensity.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the FogChunk::_sfDensity field.
inline
Real32 &FogChunkBase::getDensity(void)
{
    return _sfDensity.getValue();
}
#endif

//! Set the value of the FogChunk::_sfDensity field.
inline
void FogChunkBase::setDensity(const Real32 &value)
{
    _sfDensity.setValue(value);
}


OSG_END_NAMESPACE

#define OSGFOGCHUNKBASE_INLINE_CVSID "@(#)$Id: OSGFogChunkBase.inl,v 1.2 2009/11/13 18:07:01 neumannc Exp $"

