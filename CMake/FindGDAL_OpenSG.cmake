# - Find GDAL
# Find the native GDAL includes and library
# This module defines
#  GDAL_INCLUDE_DIR, where to find gdal.h, etc.
#  GDAL_LIBRARIES, the libraries needed to use GDAL.
#  GDAL_FOUND, If false, do not try to use GDAL.
# also defined, but not for general use are
#  GDAL_LIBRARY, where to find the GDAL library.

FIND_PATH(GDAL_INCLUDE_DIR gdal.h)

SET(GDAL_NAMES_RELEASE ${GDAL_NAMES_RELEASE} gdal)
FIND_LIBRARY(GDAL_LIBRARY_RELEASE NAMES ${GDAL_NAMES_RELEASE} )

SET(GDAL_NAMES_DEBUG ${GDAL_NAMES_DEBUG} gdald)
FIND_LIBRARY(GDAL_LIBRARY_DEBUG NAMES ${GDAL_NAMES_DEBUG} )

IF(GDAL_LIBRARY_DEBUG)
  SET(GDAL_LIBRARIES_FOUND TRUE)
  MARK_AS_ADVANCED(GDAL_LIBRARY_DEBUG)
ENDIF(GDAL_LIBRARY_DEBUG)

IF(GDAL_LIBRARY_RELEASE)
  SET(GDAL_LIBRARIES_FOUND TRUE)
  MARK_AS_ADVANCED(GDAL_LIBRARY_RELEASE)
ENDIF(GDAL_LIBRARY_RELEASE)

# handle the QUIETLY and REQUIRED arguments and set GDAL_FOUND to TRUE if 
# all listed variables are TRUE
INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(GDAL DEFAULT_MSG 
                                  GDAL_LIBRARIES_FOUND GDAL_INCLUDE_DIR)

#IF(GDAL_FOUND)
#  SET(GDAL_LIBRARIES ${GDAL_LIBRARY})
#ENDIF(GDAL_FOUND)

# Deprecated declarations.
#SET (NATIVE_GDAL_INCLUDE_PATH ${GDAL_INCLUDE_DIR} )
#IF(GDAL_LIBRARY)
#  GET_FILENAME_COMPONENT (NATIVE_GDAL_LIB_PATH ${GDAL_LIBRARY} PATH)
#ENDIF(GDAL_LIBRARY)

MARK_AS_ADVANCED(GDAL_LIBRARIES_FOUND GDAL_INCLUDE_DIR )
