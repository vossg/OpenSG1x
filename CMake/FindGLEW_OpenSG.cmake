# - Find GLEW
# Find the native GLEW includes and library
# This module defines
#  GLEW_INCLUDE_DIR, where to find glew.h, etc.
#  GLEW_LIBRARIES, the libraries needed to use GLEW.
#  GLEW_FOUND, If false, do not try to use GLEW.
# also defined, but not for general use are
#  GLEW_LIBRARY, where to find the GLEW library.

FIND_PATH(GLEW_INCLUDE_DIR GL/glew.h)

SET(GLEW_NAMES_RELEASE ${GLEW_NAMES_RELEASE} glew)
FIND_LIBRARY(GLEW_LIBRARY_RELEASE NAMES ${GLEW_NAMES_RELEASE} )

SET(GLEW_NAMES_DEBUG ${GLEW_NAMES_DEBUG} glewd)
FIND_LIBRARY(GLEW_LIBRARY_DEBUG NAMES ${GLEW_NAMES_DEBUG} )

IF(GLEW_LIBRARY_DEBUG)
  SET(GLEW_LIBRARIES_FOUND TRUE)
  MARK_AS_ADVANCED(GLEW_LIBRARY_DEBUG)
ENDIF(GLEW_LIBRARY_DEBUG)

IF(GLEW_LIBRARY_RELEASE)
  SET(GLEW_LIBRARIES_FOUND TRUE)
  MARK_AS_ADVANCED(GLEW_LIBRARY_RELEASE)
ENDIF(GLEW_LIBRARY_RELEASE)

# handle the QUIETLY and REQUIRED arguments and set GLEW_FOUND to TRUE if 
# all listed variables are TRUE
INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(GLEW DEFAULT_MSG 
                                  GLEW_LIBRARIES_FOUND GLEW_INCLUDE_DIR)

#IF(GLEW_FOUND)
#  SET(GLEW_LIBRARIES ${GLEW_LIBRARY})
#ENDIF(GLEW_FOUND)

# Deprecated declarations.
#SET (NATIVE_GLEW_INCLUDE_PATH ${GLEW_INCLUDE_DIR} )
#IF(GLEW_LIBRARY)
#  GET_FILENAME_COMPONENT (NATIVE_GLEW_LIB_PATH ${GLEW_LIBRARY} PATH)
#ENDIF(GLEW_LIBRARY)

MARK_AS_ADVANCED(GLEW_LIBRARIES_FOUND GLEW_INCLUDE_DIR )
